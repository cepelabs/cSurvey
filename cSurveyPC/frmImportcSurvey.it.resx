<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="txtFilename.ToolTip" xml:space="preserve">
    <value>Nome del file VisualTopo da importare</value>
  </data>
  <data name="cmdCancel.Text" xml:space="preserve">
    <value>Annulla</value>
  </data>
  <data name="colText.Text" xml:space="preserve">
    <value>Testo</value>
  </data>
  <data name="iml.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC2
        CwAAAk1TRnQBSQFMAgEBBAEAASABAQEgAQEBEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD//8A/wD/AP8ACQAB/wH0
        BPMB9AH/KAAB9gGZAfYB/wGZAbwB7wgAAfQB8AFzBC4BcwHwAfQDABDzAwAC8wYAAvMHAAEbAVcBCAG8
        AusB6gH0BgAB9AF4CC8BHAH0AgABUg5MAVICAAHzAkYB8wQAAfMCRgHzBgABGwFzAu0D7AEHBQAB/wEc
        Ai8GNgIvARwB/wEAAVIGegLlBnoBUgEAAfMBRgIWAUYB8wIAAfMBRgIWAUYB8wMAAf8BGgF5AW0D9wPs
        Af8EAAHyAS8JNgIvAfIBAAEaAXkBegRZAmYEWQF6AXkBGgEAAUYBFgLjARYBRgLzAUYBFgLjARYBRgIA
        Av8CVwFzAvcC7QLsAfAB/wMAAXMBLwM2A/8ENgEvAXMCAAFSAZoEWQLqBFkBmgFSAgABRgEWA+MBFgJG
        ARYD4wEWAUYBAAHzAVcBGgJXAVgB7AH3AZIC7QHsAUsBGwMAAS4BVwI2Bf8DNgEvAS4CAAH0AXQBoAhZ
        AaABdAH0AwABRgEWAxcCFgMXARYBRgIAARsBVwGZA1cBcwHvAfcB7QHsAesBbQEIAwABLgF5ATYD/wE2
        A/8CNgEvAS4DAAKZAXoCWQJmAlkBegKZBQABRgGUBhcBlAFGAwABGwFXAZkDVwFYAZIB7QH3ARoB7AHr
        Ae8DAAEuAXkBNgL/AzYD/wE2AS8BLgQAAVIBwwF6AVkCEgFZAXoBwwFSBwABRgGUBBcBlAFGBAABGwFX
        AZkEVwF0Au0B9wHvAfcBbgH/AgABLgF5BzYC/wE2AS8BLgQAARsBdAHDAVkC6gFZAcMBdAEbBgAB8wFG
        AZQEFwGUAUYB8wMAARsBVwGZBFcBUQH3AcIBuwLvAesB8QIAAngBWAc2Af8BNgEvAXgFAAF0AZoBoALq
        AaABmgF0BgAB8wFGAZQGTQGUAUYB8wIAAf8BGgH0BZkBbgIIAe8B7QLsAgAB9AEvAaABVwg2AS8B9AUA
        Af8BUgEaApkBGgFSAf8FAAHzAUYBlANNApQDTQGUAUYB8wMAAf8FVwFLAfcBBwH3Au0BRAH0AgABmAFQ
        AcMBeQQ2AlcBLwGZBwABGwF0AsMBdAEbBgABRgGaA0YBmgJGAZoDRgGaAUYEAAGZAXkBmQJXAXkBbQH3
        Au0B6gEPARwDAAGZAS8BeQKfAnkBVwEvAZgJAAF0ApoBdAcAAUYBvQJGAb0BRgIAAUYBvQJGAb0BRgQA
        Af8BmQRXAUsB6wHqAkQBCwHrBAAB9AF4BC4BeAH0CgAB9gJSAfYIAAFGAr0BRgQAAUYCvQFGBgAB9AEb
        AggBGwEcA0QBbQHwAf8jAAJGBgACRgcAAfYEAAH0AesB7wH0AwABQgFNAT4HAAE+AwABKAMAAUADAAEg
        AwABAQEAAQEGAAEBFgAD/4EAAfABDwT/AfABHwHgAQcCAALnAfABDwHAAQMCAALDAfABDwGAAQECAAKB
        AcABBwGAAQECAAGAAQEBgAEDAYABAQGAAQEBgAEBAQABAwGAAQEBgAEBAcABAwEAAQMBgAEBAcABAwHg
        AQcBAAEDAYABAQHgAQcB8AEPAQABAQGAAQEB4AEHAeABBwEAAQEBgAEBAfABDwHAAQMBAAEBAYABAQHw
        AQ8BgAEBAcABAAHAAQMB+AEfAYABAQHgAQAB4AEHAfwBPwKBAeABAAHwAQ8B/AE/AsMB8AEABP8C5wH3
        AYcL
</value>
  </data>
  <data name="GroupBox1.Text" xml:space="preserve">
    <value>Analisi rilievo:</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="chkcSurveyImportScaleRules.Text" xml:space="preserve">
    <value>Importa impostazioni per scala</value>
  </data>
  <data name="chkcSurveyImportDesignProperties.Text" xml:space="preserve">
    <value>Importa impostazioni grafiche</value>
  </data>
  <data name="chkcSurveyImportSurface.Text" xml:space="preserve">
    <value>Importa dati superficie</value>
  </data>
  <data name="chkcSurveyImportProfile.Text" xml:space="preserve">
    <value>Importa sezione</value>
  </data>
  <data name="chkcSurveyImportPlan.Text" xml:space="preserve">
    <value>Importa pianta</value>
  </data>
  <data name="chkcSurveyImportData.Text" xml:space="preserve">
    <value>Importa dati</value>
  </data>
  <data name="chkcSurveyImportGraphics.Text" xml:space="preserve">
    <value>Importa grafica</value>
  </data>
  <data name="chkcSurveyImportCaveBranchFromDesign.Text" xml:space="preserve">
    <value>Importa grotte/rami associati ad oggetti grafici</value>
  </data>
  <data name="chkcSurveyImportDuplicates.Text" xml:space="preserve">
    <value>Importa battute già esistenti</value>
  </data>
  <data name="cbocSurveyImportDuplicatesMode.Items" xml:space="preserve">
    <value>per ID battuta uguale</value>
  </data>
  <data name="cbocSurveyImportDuplicatesMode.Items1" xml:space="preserve">
    <value>per dati uguali</value>
  </data>
  <data name="lblcSurveyImportDuplicatesMode.Text" xml:space="preserve">
    <value>Ricerca battute esistenti:</value>
  </data>
  <data name="chkcSurveyImportDuplicatesOverwrite.Text" xml:space="preserve">
    <value>Sovrascrivi duplicati</value>
  </data>
  <data name="chkcSurveyImportDuplicatesStations.Text" xml:space="preserve">
    <value>Importa e sovrascrivi stazioni già esistenti</value>
  </data>
  <data name="chkImportAsBranchOf.Text" xml:space="preserve">
    <value>Importa come ramo di:</value>
  </data>
  <data name="chkcSurveyImportUpdateCaveBranchPriority.Text" xml:space="preserve">
    <value>Aggiorna priorità di grotta/ramo</value>
  </data>
  <data name="chkcSurveyImportCreateNewBranch.Text" xml:space="preserve">
    <value>Importa tutto come nuova grotta/ramo</value>
  </data>
  <data name="chkcSurveyImportDuplicatesOverwriteOnlyUsed.Text" xml:space="preserve">
    <value>Sovrascrivi solo battute collegate ad ogg. grafici</value>
  </data>
  <data name="chkcSurveyDisableOriginAsExtendstart.Text" xml:space="preserve">
    <value>Non impostare origine come sub-origine</value>
  </data>
  <data name="lblcSurveyImportWarpingMode.Text" xml:space="preserve">
    <value>Modalità di warping:</value>
  </data>
  <data name="cbocSurveyImportWarpingMode.Items" xml:space="preserve">
    <value>Automatica</value>
  </data>
  <data name="cbocSurveyImportWarpingMode.Items1" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="cbocSurveyImportWarpingMode.Items2" xml:space="preserve">
    <value>Traslazione semplice</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEACACoCAAAJgAAABAQAAABAAgAaAUAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB5KwAAfC8AAH81AACAOQAAgz4AAIU+AACGRgAAiEYAAIlJAACM
        SgAAjk0AHJRdAACecQA8mGgAAKJxAAClcQAAonUAAKx3AACoegAAq30AAK9/AEOYbgBJqX0ATKx+AFGp
        ewBRq34AUK1/AAC3hwAAuJgAALyYAE6vgwBRrYEAV7eJAADBmQAAxpoAAMqZAADPmQAAyJ0AANSbAADg
        oQAP56wAEuitACzjswAv47UASeO+AEzkwABr5coAbOXKAKWlogCnp6QAra2rAK6urACwr60AsLCtALSw
        rwCzs7IAtbCwALS0sgDFs7gAx7W5AIDr2ACJ794Al+XfAJzn3gCX6twAnejdAJzs3wCh6+AAwsLBAMXF
        xADLy8oA4N/eAOHg3wDi4eAA5OPiAOXk4wDm5uUA6OjnAOrp6ADs6+sA7u3tAPHw7wDy8fEA9PLzAPT0
        8wD19fUA+Pf3APr3+AD6+fkA/fr6AP76/AD7/PwA/v7+ANT/0QD///8AAAAAABQvAAAiUAAAMHAAAD2Q
        AABMsAAAWc8AAGfwAAB4/xEAiv8xAJz/UQCu/3EAwP+RANL/sQDk/9EA////AAAAAAAmLwAAQFAAAFpw
        AAB0kAAAjrAAAKnPAADC8AAA0f8RANj/MQDe/1EA4/9xAOn/kQDv/7EA9v/RAP///wAAAAAALyYAAFBB
        AABwWwAAkHQAALCOAADPqQAA8MMAAP/SEQD/2DEA/91RAP/kcQD/6pEA//CxAP/20QD///8AAAAAAC8U
        AABQIgAAcDAAAJA+AACwTQAAz1sAAPBpAAD/eREA/4oxAP+dUQD/r3EA/8GRAP/SsQD/5dEA////AAAA
        AAAvAwAAUAQAAHAGAACQCQAAsAoAAM8MAADwDgAA/yASAP8+MQD/XFEA/3pxAP+XkQD/trEA/9TRAP//
        /wAAAAAALwAOAFAAFwBwACEAkAArALAANgDPAEAA8ABJAP8RWgD/MXAA/1GGAP9xnAD/kbIA/7HIAP/R
        3wD///8AAAAAAC8AIABQADYAcABMAJAAYgCwAHgAzwCOAPAApAD/EbMA/zG+AP9RxwD/cdEA/5HcAP+x
        5QD/0fAA////AAAAAAAsAC8ASwBQAGkAcACHAJAApQCwAMQAzwDhAPAA8BH/APIx/wD0Uf8A9nH/APeR
        /wD5sf8A+9H/AP///wAAAAAAGwAvAC0AUAA/AHAAUgCQAGMAsAB2AM8AiADwAJkR/wCmMf8AtFH/AMJx
        /wDPkf8A3LH/AOvR/wD///8AAAAAAAgALwAOAFAAFQBwABsAkAAhALAAJgDPACwA8AA+Ef8AWDH/AHFR
        /wCMcf8AppH/AL+x/wDa0f8A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgkICQkJCQwAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAGKSgoKCgqCQAAAAAAAAA4NjQ0NDQ0NDQ0MzQ0NDY5PAQrJycnJywHAAAA
        AAAAADZfX19fX19fX19fX19fX19fBC0lJSUlLgcAAAAAAAAANF9fX19fX19fX11fX18BAwQEMCQkJCQw
        BQgKCwAAAAAzX11cXFxcXFxcXFxdXx8SPSYmIyMmJiMmPhwXAAAAADNfXFxcXFxcXFxcXFxfXyAQQSIi
        IiIiIkMVGgAAAAAAM19ZWVlZWVlZWVlZWVxdXyAQQh4eHh5EFBoAAAAAAAAzX1lXWVdZV1lXWVdZV1pb
        XxsPQh0dQhMZAAAAAAAAADNfV1dXV1dXV1dXV1dXV1hbXxsNPz8RFgAAAAAAAAAAM19WV1ZXVldWV1ZX
        VldWV1dbXxgCAiE8AAAAAAAAAAAzX1ZWVlZWVlZWVlZWVlZWVldZW19fXzcAAAAAAAAAADNfVVVVVVVV
        VVVVVVVVVVVVVVVWV1ZfNAAAAAAAAAAAM19UVFNUU1RTVFNUU1RTVFNUU1RTVF8zAAAAAAAAAAAzX1NT
        U1NTU1NTU1NTU1NTU1NTU1NTXzMAAAAAAAAAADNfUlJSUlJSUlJSUlJSUlJSUlJSUlJfMwAAAAAAAAAA
        M19SUlJSUlJSUlJSUlJSUlJSUlJSUV8zAAAAAAAAAAAzX1FRUVFRUVFRUVFRUVFRUVFRUVFRXzMAAAAA
        AAAAADNfUFFQUVFQUVBRUFFQUVBRUVFQUVBfMwAAAAAAAAAAM19QUFBQUFBQUFBQUFBQUFBQUFBQUF8z
        AAAAAAAAAAAzX09QT09QUFBQUFBQUFBPT09PT05OXzMAAAAAAAAAADNfTk9PT09PT09PT09PTlRfX19f
        X19fNAAAAAAAAAAAM19OTk5OT05PTk9OTk5NX0cyMjIyMV81AAAAAAAAAAA0X01NTU5NTU1NTU1NTk1f
        Ml9cVlFfTzoAAAAAAAAAADRfS01NTU1NTU1NTU1NS18yXFRPX046AAAAAAAAAAAANF9KTExNTExMTExM
        TExLXzJWUF9NOgAAAAAAAAAAAAA0X0pKS0tLS0tLS0tLSkpfMlFfTToAAAAAAAAAAAAAADRfSElJSUlJ
        SUlJSUlJSF8xX05FAAAAAAAAAAAAAAAANV9fX19fX19fX19fX19fX19PRQAAAAAAAAAAAAAAAABGNjQ0
        NDQ0NDQ0NDQ0NDM0NUYAAAAAAAAAAAAAAAD/////////////4B///+AfwAAAH8AAAB/AAAADwAAAA8AA
        AAfAAAAPwAAAH8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AA
        AD/AAAA/wAAAP8AAAH/AAAD/wAAB/8AAA//AAAf/wAAP/ygAAAAQAAAAIAAAAAEACAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAHkrAAB6LQAAfC8AAH82AACCOgAAh0EAAIhFAACKSQAAjEoAEJJWABiR
        WQAArnoAALF/AECgdAAAuJsAAL6bAAC5nQAAvp0ATbCDAADInwAAwaAAAMigAADfpgBy1r8AQOu/AKWl
        owCnp6QAra2rAK6urACwrq0AsLCtALWxsQC2trQAurq4AMCytgCE18QAg9zKAI7bywCW39AAysrIAODf
        3gDh4N8A2vDlAOPj4gDk5OMA5uXkAOjn5gDp6egA7OrpAO3s6wDv7+4A8O/vAPLx8AD18vIA8/TyAPT0
        8wD29fUA+/X2APn4+AD9+PkA/vr9AP7+/gD///8AAAAAAAAvDgAAUBgAAHAiAACQLAAAsDYAAM9AAADw
        SgAR/1sAMf9xAFH/hwBx/50Akf+yALH/yQDR/98A////AAAAAAACLwAABFAAAAZwAAAIkAAACrAAAAvP
        AAAO8AAAIP8SAD3/MQBb/1EAef9xAJj/kQC1/7EA1P/RAP///wAAAAAAFC8AACJQAAAwcAAAPZAAAEyw
        AABZzwAAZ/AAAHj/EQCK/zEAnP9RAK7/cQDA/5EA0v+xAOT/0QD///8AAAAAACYvAABAUAAAWnAAAHSQ
        AACOsAAAqc8AAMLwAADR/xEA2P8xAN7/UQDj/3EA6f+RAO//sQD2/9EA////AAAAAAAvJgAAUEEAAHBb
        AACQdAAAsI4AAM+pAADwwwAA/9IRAP/YMQD/3VEA/+RxAP/qkQD/8LEA//bRAP///wAAAAAALxQAAFAi
        AABwMAAAkD4AALBNAADPWwAA8GkAAP95EQD/ijEA/51RAP+vcQD/wZEA/9KxAP/l0QD///8AAAAAAC8D
        AABQBAAAcAYAAJAJAACwCgAAzwwAAPAOAAD/IBIA/z4xAP9cUQD/enEA/5eRAP+2sQD/1NEA////AAAA
        AAAvAA4AUAAXAHAAIQCQACsAsAA2AM8AQADwAEkA/xFaAP8xcAD/UYYA/3GcAP+RsgD/scgA/9HfAP//
        /wAAAAAALwAgAFAANgBwAEwAkABiALAAeADPAI4A8ACkAP8RswD/Mb4A/1HHAP9x0QD/kdwA/7HlAP/R
        8AD///8AAAAAACwALwBLAFAAaQBwAIcAkAClALAAxADPAOEA8ADwEf8A8jH/APRR/wD2cf8A95H/APmx
        /wD70f8A////AAAAAAAbAC8ALQBQAD8AcABSAJAAYwCwAHYAzwCIAPAAmRH/AKYx/wC0Uf8AwnH/AM+R
        /wDcsf8A69H/AP///wAAAAAACAAvAA4AUAAVAHAAGwCQACEAsAAmAM8ALADwAD4R/wBYMf8AcVH/AIxx
        /wCmkf8Av7H/ANrR/wD///8AAAAAAAAAAAAAAAAAAAAAACIeHRwcHBweICALCAgKAAAfPz8/Pz8/Pz8r
        BRkXBwAAHT8+PT4+Pj8TBAwWFg0HDhw/Ozs7Ozw/ARgSEBAVJQkcPzk5OTk7PT8CJA8RJgcAHD84ODg5
        ODk8PwImJwYAABw/NTU1NTU1Njo+AwUAAAAcPzMzMzQzMzM0Nj8jAAAAHD8xMjIyMjIxMTI/HgAAABw/
        MDAxMDA3Pz8/Px0AAAAcPy4vLy8uPygbGj8eAAAAHT8sLS0tLD8bMT8wKAAAAB0/KSkqKSk/Gj8wKAAA
        AAAePz8/Pz8/Pz8wKAAAAAAAIR8dHR0dHB0eIQAAAAAAAP//AAAAAwAAAAMAAAAAAAAAAAAAAAEAAAAD
        AAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAADwAAAB8AAAA/AAA=
</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Importazione da cSurvey:</value>
  </data>
</root>