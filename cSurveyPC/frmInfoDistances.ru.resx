<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
	<data name="cmdFilter.ImeMode" type="System.Windows.Forms.ImeMode, System.Windows.Forms">
		<value>NoControl</value>
	</data>
	<assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
	<data name="cmdFilter.Size" type="System.Drawing.Size, System.Drawing">
		<value>25, 25</value>
	</data>
	<data name="cmdFilter.TextImageRelation" type="System.Windows.Forms.TextImageRelation, System.Windows.Forms">
		<value>ImageBeforeText</value>
	</data>
	<data name="cmdRefresh.Text" xml:space="preserve">
    <value>Обновить</value>
  </data>
	<data name="lblMaxDistance.Size" type="System.Drawing.Size, System.Drawing">
		<value>111, 13</value>
	</data>
	<data name="lblMaxDistance.Text" xml:space="preserve">
    <value>Наиболее удаленные пикеты:</value>
  </data>
	<data name="lblDistanceMode.Text" xml:space="preserve">
    <value>Расстояние:</value>
  </data>
	<data name="cboDistanceMode.Items" xml:space="preserve">
    <value>По горизонтали</value>
  </data>
	<data name="cboDistanceMode.Items1" xml:space="preserve">
    <value>Перепад высот</value>
  </data>
	<data name="cboDistanceMode.Items2" xml:space="preserve">
    <value>Реальные</value>
  </data>
	<data name="cboDistanceMode.Items6" xml:space="preserve">
    <value>До поверхности (вертикально)</value>
  </data>
	<data name="Label4.Size" type="System.Drawing.Size, System.Drawing">
		<value>50, 13</value>
	</data>
	<data name="Label4.Text" xml:space="preserve">
    <value>Фильтровать по:</value>
  </data>
	<data name="cmdClose.Text" xml:space="preserve">
    <value>Закрыть</value>
  </data>
	<data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
		<value>
        AAABAAIAICAAAAEACACoCAAAJgAAABAQAAABAAgAaAUAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACOJxgAmi8cAKozHACWLyAAmjckAKY7KAC2NyAAqkMsALZDLACqQ
        zAAskcwAMZXOADyXzQAss+wANrftADm37AA3uO0APrntAG2v1gBCreEAQbruAES77QBDve8ARrzuAEm9
        7gBOvu4AWLXlAFC/7wBKv/EATL/wAFC/8ABSwO8AVcDvAE3A8ABSwfAAVcHwAFfE8gBZwvAAXMPwAFnE
        8QBdxPEAXsf0AGvB6wBhxfEAZcbyAGXI8gBhyPQAZcn0AGnI8gBtyvIAbszzAGnJ9ABqzPUAbs30AHHM
        8wB1zfMAcc31AHbO9AB5z/QAc9D2AHTQ9gB60fUAfdD1AIHJ7ACFy+0AicztAI3O7wCS0e8AgNP3AILU
        +ACF1vgAidr7AJXS8ACW1PAAmtTwAJ7W8QCa3PkAnN34AKHY8gCl2vIAqdvzAKvc8wCt3fMAqt30AKLe
        +ACf4fsAn+H8AKHh+gCl4voAoeL8AKTj/QCo4/sAtf+xANT/0QD///8AAAAAABQvAAAiUAAAMHAAAD2Q
        AABMsAAAWc8AAGfwAAB4/xEAiv8xAJz/UQCu/3EAwP+RANL/sQDk/9EA////AAAAAAAmLwAAQFAAAFpw
        AAB0kAAAjrAAAKnPAADC8AAA0f8RANj/MQDe/1EA4/9xAOn/kQDv/7EA9v/RAP///wAAAAAALyYAAFBB
        AABwWwAAkHQAALCOAADPqQAA8MMAAP/SEQD/2DEA/91RAP/kcQD/6pEA//CxAP/20QD///8AAAAAAC8U
        AABQIgAAcDAAAJA+AACwTQAAz1sAAPBpAAD/eREA/4oxAP+dUQD/r3EA/8GRAP/SsQD/5dEA////AAAA
        AAAvAwAAUAQAAHAGAACQCQAAsAoAAM8MAADwDgAA/yASAP8+MQD/XFEA/3pxAP+XkQD/trEA/9TRAP//
        /wAAAAAALwAOAFAAFwBwACEAkAArALAANgDPAEAA8ABJAP8RWgD/MXAA/1GGAP9xnAD/kbIA/7HIAP/R
        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
</value>
	</data>
	<data name="$this.ImeMode" type="System.Windows.Forms.ImeMode, System.Windows.Forms">
		<value>NoControl</value>
	</data>
	<data name="$this.Text" xml:space="preserve">
    <value>Расстояния между пикетами:</value>
  </data>
	<data name="cboDistanceMode.Items3" xml:space="preserve">
    <value>X</value>
  </data>
	<data name="cboDistanceMode.Items4" xml:space="preserve">
    <value>Y</value>
  </data>
	<data name="cboDistanceMode.Items5" xml:space="preserve">
    <value>Z</value>
  </data>
	<data name="mnuSurveyDistancesCopy.Text" xml:space="preserve">
    <value>Копировать</value>
  </data>
	<data name="mnuSurveyDistancesCopyAll.Text" xml:space="preserve">
    <value>Копировать все</value>
  </data>
	<data name="mnuSurveyDistancesExport.Text" xml:space="preserve">
    <value>Экспорт...</value>
  </data>
	<data name="mnuSurveyDistancesRefresh.Text" xml:space="preserve">
    <value>Обновить</value>
  </data>
</root>