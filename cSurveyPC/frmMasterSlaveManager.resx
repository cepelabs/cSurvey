<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="iml.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="iml.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAG
        DwAAAk1TRnQBSQFMAgEBBQEAAfwBBQH8AQUBEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGBIAA/Uq7gPvkAAByAGsAXYBuAGBARMBtwF+AQ4BtgF+AQ0BtgF+AQ0BtgF+
        AQ0BtgF+AQ0BtgF+AQ0BtwF+AQ0BuAF/AQoBqQGWAW8BogGkAagBowKiAaMBoQGgAaQBogGgAasBqgGo
        kAABugGFARsb/wHOAbUBjgHWAbwBlQHnAdsB0AHVAdQB0wHyAvMBqAGmAaSQAAG7AYUBHgj/Af4C/wH+
        Ev8BswGIAUoB+gHyAegB6QHbAcgB2QHYAdcBqwGpAaiQAAG+AYkBJAX/AfoBxgHDAcEC/wH9AdYCxwP/
        AdYCxwL/Af4ByAHGAcUD/wG1AZYBawH1Ae4B5QH/AfkB8wHrAd8BzwGxArCQAAHAAYwBLAX/AfcBxAHA
        Ab4B0wLEAQABowFvAQABpAFyAQABowFvAdUCxAHKAcQBwgHIAcYBxQG6AZ0BeAGxAYcBUwG6AZABWgHX
        AcABpAG1AbcBupAAAcIBkQE0Bf8B8gHDAb8BvQL/Af4BAAGlAXMBAAHfAbUBAAGmAXQD/wHVAcMBxAP/
        AdIBxQHIA/8B9gHqAdUBxwGpAYYBvgGtAYyQAAHGAZUBPAT/Af4B7gG/AboBtwHOAb4BvQEAAaUBcgEA
        AaYBdQEAAaUBcgHeAcABwgEAAaUBcgEAAaUBdAEAAaQBcQHKArsC/wHzAf8B+gHxAcgBlQE5kAAByAGY
        AUMC/wH9Af8B/AHqAbgBtQGzAv8B8QHKAroC/wH1Ac0CuwL/AfcBAAGmAXUBAAHfAbYBAAGlAXQC/wHx
        Af8B+wHqAv8B/gHIAZgBQ5AAAcoBnAFLAv8B/AH/AfwB5QG1AbMBrwG4AbUBsQG7AbYBsgG7AbYBsgG9
        AbcBswHHAbcBtQEAAaYBcwEAAacBdQEAAaUBcgHAArEB/wH6AeUC/wH8AcoBnAFLkAABzQGgAVMC/wH7
        Af8B+gHhAa8BrAGpAv8B5wGzAa8BqwL/AecBtAGwAasC/wHpAcEBsAGvAv8B7QHAAbABrgL/AeUB/wH5
        Ad8C/wH6Ac0BoAFTkAAB0gGjAVkC/wH4Af8B+AHZAa0BqQGkAa8BqwGlAbABrAGmAbABrAGmAbABrAGm
        AbEBrAGmAbMBrAGnAbMBrAGnAbIBqwGmAawBpwGjAf8B9wHZAv8B+AHSAaMBWZAAAeIBqgFWAv8B8QH/
        AfkBzwH/AfwB0QH/Af4B0gH/Af4B0gH/Af4B0gH/Af4B0gH/Af4B0gH/Af4B0gH/Af4B0gH/Af4B0gH/
        AfwB0AH/AfkBzwL/AfEB4gGqAVaQAAEaAZsB/wF9AcYB/wEqAZ4B/wEsAZ8B/wEtAZ8B/wEtAZ8B/wEt
        AZ8B/wEtAZ8B/wEtAZ8B/wEtAZ8B/wEtAZ8B/wEtAZ8B/wEsAZ8B/wEqAZ4B/wF9AcYB/wEaAZsB/5AA
        ARoBmAH/Aa8B2wH/Aa0B2QH/Aa0B2gH/Aa0B2gH/Aa0B2gH/Aa0B2gH/Aa0B2gH/Aa0B2gH/Aa0B2gH/
        Aa0B2gH/Aa0B2gH/Aa0B2gH/Aa0B2QH/Aa8B2wH/ARoBmAH/kAABdAGnAckBFwGWAf8BGQGWAf8BGgGW
        Af8BGgGWAf8BGgGWAf8BGgGWAf8BGgGWAf8BGgGWAf8BGgGWAf8BGgGWAf8BGgGWAf8BGgGWAf8BGQGW
        Af8BFwGWAf8BdAGnAcmoAAP0A/kqAAP0A/lFAAPuA/U8AAP0A7EDtgP5JAAD9AOxA7YD+RgAAuoB9QL9
        Af4SAAL9Af4C6AH1DAABFgGvAYABaAHoAc4G7jMAA/QDtQPgA9gDtgP5HgAD9AO1A+AD2AO2A/kSAALr
        AfYBTwFMAfICQgHtAv0B/gwAAv0B/gEpAScB4wExAS8B6gLoAfUJAAGMAfMB6AEBAf8B1gF4AWcBagF0
        AW0BbgPuLQAD8wO4A+IG/QPZA7YD+RgAA/MDuAPiBv0D2QO2A/kMAALrAfYBWAFWAfUBYwFhAfoBWAFV
        AfYBRAFCAewC/QH+BgAC/QH+AS8BLgHlAUEBPwHxAUwBSgH2ATEBLwHqAugB9QkAAXoBYAFkAXYBZwFo
        AWIBUQFSAYEBYQFoA+4nAAPzA7sD5AP9AfsB7AHVAf0B0gGXAf0B+wH3A9kDtwP5EgAD8wO7A+QD/QHN
        AeIB1wF/AboBnAH2AfkB9wPZA7cD+QkAAvQB+AFbAVgB9gFlAWIB+gFxAXAB/wFZAVYB9gFFAUMB7QL9
        Af4C/QH+ATgBNQHoAUcBRQHyAWMBYgH/AUoBSAH0AS8BLQHpAfMB8gH4CQABcgFqAWsBkgGEAYMBWwHH
        AbUBAAH1AcEBAAG1AY0D7iEAA/QDvgPlA/0B+wHsAdYB/QHNAYYB/wHPAYwB+gHRAZcB+QH3AfMD2QO3
        A/kMAAP0A74D5QP9Ac4B4wHYAWwBsAGNAXIBtAGSAYEBugGcAfIB9QH0A9kDtwP5CQAC9AH4AVsBWQH2
        AWYBYwH6AXQBcQH/AVoBWAH2AUYBRAHtAUIBQAHsAVABTQH0AWgBZwH/AVABTgH1ATYBNAHrAvMB+A8A
        AXABZAFmAd4C/wFOAfcB2wEAAesBuwEAAbMBjAPuGwAD9APCA+cD/QH7AewB1gH9Ac0BiAH/AdUBmAH/
        AdYBnAH/AdABjgH3AcwBjQH9AfwB+wPZA7cD+QYAA/QDwgPnA/0BzgHjAdgBbgGxAY4BgQG8AZ4BhgG/
        AaEBdAG2AZQBdQGyAZMB+gH8AfsD2QO3A/kJAAL0AfgBXAFaAfYBZwFkAfoBdAFyAf8BcwFwAf8BcAFu
        Af8BbgFsAf8BVwFVAfcBPwE9Ae4C8wH4FgAByAGZAecC/wFTAfQB2gEAAd4BrwEAAbMBjAPuFQAD9APF
        A+gD/QH7AewB1gH9Ac0BiAH/AdUBmAH/AdcBngH/AdYBmwH/Ac4BiQH9AeEBugP9A9cDtQP7AwAD9APF
        A+gD/QHOAeMB2AFuAbEBjgGBAbwBngGIAcABowGEAb4BoAFuAbIBjwGqAdEBvQP9A9cDtQP7DAAC9AH4
        AV0BWwH3AXkBdgH/AVkBVgH/AVcBVAH/AXIBcAH/AUgBRgHwAvMB+BwAAcABlQGqAfMB6AFVAfUB2wEA
        AesBuwEAAbMBjAPuDwAD9APJA+kD/QH7AesB0wH/AcwBgwH/AdQBmAH/AdcBngH/AdYBmwH/Ac8BiwH9
        AeIBvAP9A9kDuQP7AwAD9APJA+kD/QHKAeIB1gFnAa8BigGAAbwBnQGIAcABowGEAb4BoAFwAbMBkQGu
        AdMBwAP9A9kDuQP7DwAC/QH+AV8BXAH2AX0BeQH/AV4BWwH/AVsBWAH/AXYBdAH/AUgBRQHvAv0B/h8A
        AcABlQGrAfMB6AFVAfQB2wEAAesBuwEAAbMBjAPuDAADzQPrA/0D+gH7AfMB5wH+Ac4BiQH/AdQBlgH/
        AdUBmgH/Ac8BiwH9AeIBvAP9A9oDvQP7BgADzQPrA/0D+gHjAe4B6AFvAbMBjwF+AbsBmwGDAb4BnwFw
        AbMBkQGuAdMBwAP9A9oDvQP7DwAC/QH+AWkBZgH4AXABbQH7AYABfgH/AX4BewH/AXwBeQH/AXkBdwH/
        AV4BXAH3AUoBRwHuAv0B/h8AAcABlQGrAfMB6AFVAfQB2wEAAesBuwEAAbMBiwPuCQADzQb9A/wD9wH9
        AfUB6gH+Ac8BigH/AcwBgwH9AeIBvAP9A9wDwAP7CQADzQb9A/wD9wHmAfEB6wFwAbMBkAFnAa4BiQGu
        AdMBwAP9A9wDwAP7DwAB/gH9Af4BcQFuAfsBdwF0Af0BhgGCAf8BdgFzAfwBZAFiAfgBYAFdAfcBbQFq
        AfoBewF5Af8BYAFdAfcBSwFIAe4C/QH+HwABwAGVAasB8wHoAUUB9AHWAV8B9wHZAQABswGMA+4GAAPO
        A/0D4APLA88D9wH7AfMB6AH9AeMBvQP9A94DwwP7DAADzgP9A+ADywPPA/cB4wHvAekBrwHTAcED/QPe
        A8MD+w8AA/4BdgFzAf4BfQF6Af4BigGHAf8BfAF5Af0BbAFpAfsC9AH5AvQB+QFhAV4B+AFuAWwB+gF9
        AXoB/wFhAV8B9wFMAUkB7wP+HwABwAGVAaYB/wH7ATQBvAGeAQAB7AG7AQABswGMA+4DAAPQA/0DzQMA
        A9UD8wP7A/0D4APHA/sPAAPQA/0DzQMAA9UD8wP7A/0D4APHA/sSAAL4AfoBegF3Af8BgQF+Af8BgQF+
        Af4BdAFxAf0C9QH5BgAC9AH5AWIBXwH4AW8BbQH7AX4BfAH/AWIBXwH4AdIB0QHxA/8fAAHAAZUB6QL/
        AVEB9AHaAQAB6wG6AQABswGMA+4D0gP9A+IDzgPgBv0D4gPLA/sSAAPSA/0D4gPOA+AG/QPiA8sD+xgA
        AvgB+gF6AXcB/wF5AXYB/gL1AfkMAAL0AfkBZAFhAfgBagFoAfkBqwGpAfAB9QH0AfklAAG/AZQB6AL/
        AVIB8wHZAQAB7AG8AQABtQGOA9MP/QPkA80D+xUAA9MP/QPkA80D+x4AAvgB+gL1AfkSAAL0AfkC1QHz
        Au0B9isAAb8BkwHrAv8BPwH3AdkBAAG4AZED1QPUA9ID0QPQA84DzQP7GAAD1QPUA9ID0QPQA84DzQP7
        PAAD/TAAAS8BzgGtAQABvgGVAcAB5wHfAUIBTQE+BwABPgMAASgDAAFAAwABIAMAAQEBAAEBBgABARYA
        A/+BAAH/AT8B/wE/Av8BnwH/Af4BHwH+AR8C5wGHAf8B/AEPAfwBDwLDAYMB/wH4AQcB+AEHAoEBwQH/
        AfABAwHwAQMBgAEBAcAB/wHgAQEB4AEBAcABAwHgAX8BwAEAAcABAAHgAQcB8AE/AYABAAGAAQAB8AEP
        AfgBHwEAAQEBAAEBAfABDwH8AQ8BAAEDAQABAwHgAQcB/gEHAQABBwEAAQcBwAEDAf8BAwEAAQ8BAAEP
        AYABAQH/AYEBEAEfARABHwGBAYAB/wHAAQABPwEAAT8BwwHBAf8B4AEAAX8BAAF/AecB4wH/AfABAAH/
        AQAC/wH3Af8B+As=
</value>
  </data>
</root>